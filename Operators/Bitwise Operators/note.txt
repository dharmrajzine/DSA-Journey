Bitwise Operators
    a bitwise operator in java a symbol/notation that performs a specified operation on standalone bits, taken one at a time.it is used to manipulate individual bits of a binary number and can be used with a variety of integer types - char, int, long, short, byte

    1. Bitwise OR (|)
        this operator is a binary operator, denoted by '|' it returns bit by bit OR of input values, if either of the bits is 1, it gives 1, else it shows 0.

          a = 5 = 0101 (In Binary)
          b = 7 = 0111 (In Binary)

          Bitwise OR Operation of 5 and 7
          0101 
|         0111
          ________
          0111  = 7 (In decimal) 
    2. Bitwise AND (&)

    This operator is a binary operator, denoted by ‘&.’ It returns bit by bit AND of input values, i.e., if both bits are 1, it gives 1, else it shows 0. 

Example:

        a = 5 = 0101 (In Binary)
        b = 7 = 0111 (In Binary)

        Bitwise AND Operation of 5 and 7
        0101
        & 0111
        ________
        0101  = 5 (In decimal) 
    
    3. Bitwise XOR (^) 

        This operator is a binary operator, denoted by ‘^.’ It returns bit by bit XOR of input values, i.e., if corresponding bits are different, it gives 1, else it shows 0. 

Example:

        a = 5 = 0101 (In Binary)
        b = 7 = 0111 (In Binary)

        Bitwise XOR Operation of 5 and 7
          0101
        ^ 0111
         ________
          0010  = 2 (In decimal) 
    
    4. Bitwise Complement (~)

        This operator is a unary operator, denoted by ‘~.’ It returns the one’s complement representation of the input value, i.e., with all bits inverted, which means it makes every 0 to 1, and every 1 to 0. 

Example:

            a = 5 = 0101 (In Binary)

            Bitwise Complement Operation of 5

            ~ 0101
             ________
              1010  = 10 (In decimal) 